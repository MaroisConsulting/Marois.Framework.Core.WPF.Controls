<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Marois.Framework.Core.WPF.Controls"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors">

    <Style TargetType="{x:Type local:MaroisHyperlink}">

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate>
                    
                    <TextBlock>

                        <Hyperlink x:Name="hyperLink" 
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                   TextDecorations="{Binding TextDecorations, RelativeSource={RelativeSource TemplatedParent}}">

                            <TextBlock Text="{Binding LinkText, 
                                       RelativeSource={RelativeSource TemplatedParent}}"/>
                                
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                                        AncestorType=Control}, Path=LinkClickedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                                
                        </Hyperlink>

                    </TextBlock>

                <ControlTemplate.Triggers>

                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="hyperLink" Property="TextDecorations" Value="{Binding TextDecorations, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Setter TargetName="hyperLink" Property="Foreground" Value="{Binding HoverBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Trigger>

                </ControlTemplate.Triggers>
                    
                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="{x:Type local:MaroisImageButton}">

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type local:MaroisImageButton}">

                    <Grid x:Name="Grid">

                        <Border x:Name="border"
                                Margin="2" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="{TemplateBinding BorderThickness}"/>

                        <Grid VerticalAlignment="Center" 
                              HorizontalAlignment="Center">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Image Grid.Column="0" 
                                   x:Name="buttonImage" 
                                   Source="{Binding NormalImage, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Height="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}" 
                                   Width="{Binding ImageSize, RelativeSource={RelativeSource TemplatedParent}}"
                                   ToolTip="{TemplateBinding ToolTip}"
                                   Margin="5,0,0,0"/>

                            <TextBlock Grid.Column="1" 
                                       x:Name="caption" 
                                       Text="{Binding Caption, RelativeSource={RelativeSource TemplatedParent}}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="5,0,0,0"/>

                        </Grid>

                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">

                            <Setter TargetName="caption" Property="Foreground" 
                                    Value="{Binding Path=HoverBrush, RelativeSource={RelativeSource AncestorType={x:Type local:MaroisImageButton}}}" />

                        </Trigger>
                      
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="{x:Type local:MaroisDropDownTree}">

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ComboBox}">

                    <Border Margin="2" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="{TemplateBinding BorderThickness}">
                        
                        <TreeView ItemsSource="{Binding TreeData, RelativeSource ={RelativeSource TemplatedParent}}"/>
                        
                    </Border>
                    
                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="{x:Type local:MaroisExplorerTree}">

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate>

                    <Border Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="{Binding Margin, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Width="Auto">

                        <TreeView ItemsSource="{Binding TreeItems, RelativeSource={RelativeSource TemplatedParent}}">

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                                           PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <TreeView.Resources>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Name="img"
                                                           Width="20" 
                                                           Height="20" 
                                                           Stretch="Fill" 
                                                           Source="{Binding 
                                                           RelativeSource={RelativeSource 
                                                           Mode=FindAncestor, 
                                                           AncestorType={x:Type TreeViewItem}}, 
                                                           Path=Header, 
                                                           Converter={x:Static local:HeaderToImageConverter.Instance}}"/>
                                                    
                                                    <TextBlock Text="{Binding}" Margin="5,0" />
                                                    
                                                </StackPanel>
                                                
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TreeView.Resources>

                        </TreeView>

                    </Border>

                </ControlTemplate>

            </Setter.Value>

        </Setter>

    </Style>

    <Style TargetType="{x:Type local:MaroisTaskList}">

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type local:MaroisTaskList}">

                    <Border Padding="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="{Binding Margin, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!--TOOLBAR-->
                            
                            <!--TASK LIST-->
                            <DataGrid>

                                

                            </DataGrid>

                        </Grid>
                        
                    </Border>

                </ControlTemplate>
                
            </Setter.Value>

        </Setter>
        
    </Style>

</ResourceDictionary>
